<h3>6. What is the octal representation of a file that can be read and written only by its owner?</h3>
    <p>octal = 6 0 0 (symbolic = rw- --- --- | 3-bit = 110 000 000)  </p>
<h3>7. In UNIX systems, what is the common name of the special user that can access and modify every file?</h3>
    <p>"SUDO" or "Super User Do" is the common name of the special user</p>
<h3>8. Which file permission classes are available in UNIX systems?</h3>
    <p>u (user), g (group) and o (other). You can also write a (all)</p>
<h3>9. As of 2020, which percentage of servers have UNIX-like OS?</h3>
    <p>As of 2020 unix like os is used by more than 70% of the servers</p>
<h3>10. The command ssh will:</h3>
    <p>The ssh command will securely connect to a remote server/system. example: {ssh pederp@login.stud.ntnu.no}</p>
<h3>11. UNIX Command: access your current working directory</h3>
    <p>{cd /home/users/pederp/Unixscripting}</p>
<h3>12. UNIX Command: rename files (give an example)</h3>
    <p>mv Unixscripting scripting</p>
<h3>13. UNIX Command: schedule the execution of programs in the future</h3>
    <p> {echo "this is a test" | at 15:45 nov 28}</p>
<h3>14. UNIX Command: Forcefully shutdown the command with process ID 123</h3>
    <p>{kill 123} or {sudo kill 123} if it does not work use {kill -9 123}</p>
<h3>15. UNIX Command: access your root user</h3>
    <p>{sudo -s} then write password, then you have access.</p>
<h3>16. Crontab scheduled: At minute 30 on Sunday</h3>
    <p>30 * * * 7</p>
<h3>17. Crontab scheduled: At minute 30 on day-of-month 15.</h3>
    <p>30 * 15 * *</p>
<h3>18. Crontab scheduled: At 05:30 on every day-of-week from Sunday through Monday in June.</h3>
    <p>30 5 * 6 * sun-mon</p>
<h3>19. Script: print your name and date</h3>
    <p>
    #!/bin/bash
    read -p "Please enter your name: " name
    NOW=$(date)
    echo "Hello $name, today's date is $NOW"
    </p>
<h3>20. Script: add two numeric values, print the result</h3>
    <p>
    #!/bin/bash
    echo "Enter two numbers"
    read num1 num2
    sum=$((num1 + num2))
    echo "The sum is = $sum"

    "The sum is 6"
    </p>
<h3>21. Script: inputs username, prints “USERNAME stored”</h3>
    <p> 
    #!/bin/bash
    u="$USER"
    echo "$u stored"
    </p>
<h3>22. Script: Store the output of the command “hostname” in a variable. Display “This script is running on _.” where “_” is the output of the “hostname” command.</h3>    
    <p>
    #!/bin/bash
    h="$HOSTNAME"
    echo "This script is running on $h."
    </p>
<h3>23. Script: Store the output of the working directory (from where the script is run) in a variable then print the variable. </h3>
    <p>
    #!/bin/bash
    current=`pwd`
    echo "This script is run from $current"
    </p>
<h3>24. Create a step by step tutorial on how to create a cronjob that prints “Task scheduled at” + DATE. Cronjob is scheduled every 30 minutes on today’s date (only today).</h3>
    <p>
    <ul>
     <li>1.I recommend that you first log into your root user, so you can to staring cron. Type sudo -s. Then you just write your information till you can see root@.
     <li>2.Now you need to make a script by typing "nano yourchoice.sh". In the nano you need to type #!bin/bash - echo "Task scheduled at $(date)".
     <li>3.Now we need to make a text file where the information comes in. Write "cat > yourchoice2.txt". Remember to give the .sh and .txt rights! ("chmod +x yourcoice.sh","chmod +x yourchoice2.txt")
     <li>4.When you have done that you need to schedule it. We do that by uysing cron. First we open the crontab "crontab -e". Here you can edit the cronjobs.
     <li>5.Now we write */30 * * * fri /home/yourname/yourchoice.sh >> /home/yourname/youchoice2.txt in the crontab and then save it.
     <li>6.Then we want to start cron by typing service cron start. And then you are done, now it will write your script into the log every 30 minutes today. (type "cat yourchoice2.txt" to see if it works)
    <ul>
    </p>
<h3>25.Create a script that takes an input (letter or number) that will display the answer of a question.
    The script should when started list a menu for the user with the different questions that can be
    chosen and which corresponding letter the user will have to give as input to display the answer of
    the desired question. One of the possible inputs the user should be able to make is "q" for quitting    
    the script. The menu should also have a default case where all the items is displayed again, or no
    changes is made if the user gives an invalid input.</h3>
    <p>
    echo "Type 1,2,3 or q"
    PS3='Please enter your choice: '
    options=("What components are part of the Von Neuman Architecture" "What is user space?" "What is the main task of the she>select opt in "${options[@]}"
    do
    case $opt in
        "What components are part of the Von Neuman Architecture")
            echo "Central Processing Unit (CPU), Memory and Input/output (I/O)"
            ;;
        "What is user space?")
            echo "User space is system memory allocated to running applications."
            ;;
        "What is the main task of the shell?")
            echo "Shell's primary purpose is to read commands and run other programs."
            ;;
        "Quit")
                break
                ;;
            *) echo "invalid option $REPLY";;
        esac
    done
    </p>